/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.gupta_tripti_002776822_aedproject;

import employeeModel.AllEmployees;
import employeeModel.EmployeeDetails;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Lenovo
 */
public class ViewEmployee extends javax.swing.JPanel {
//    EmployeeDetails emp;
    AllEmployees allEmp;

    /**
     * Creates new form ViewEmployee
     * @param allEmp
     */
    public ViewEmployee(AllEmployees allEmp) {
        initComponents();
        this.allEmp = allEmp;
        displayEmployeeDetailsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewEmployeeLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewTable = new javax.swing.JTable();
        phoneLabel = new javax.swing.JLabel();
        photoLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        levelLabel = new javax.swing.JLabel();
        teamInfoLabel = new javax.swing.JLabel();
        positionLabel = new javax.swing.JLabel();
        viewButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        nameTextField = new javax.swing.JTextField();
        idTextField = new javax.swing.JTextField();
        ageTextField = new javax.swing.JTextField();
        genderTextField = new javax.swing.JTextField();
        dateTextField = new javax.swing.JTextField();
        levelTextField = new javax.swing.JTextField();
        teamInfoTextField = new javax.swing.JTextField();
        positionTextField = new javax.swing.JTextField();
        phoneTextField = new javax.swing.JTextField();
        photoTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        filterTextField = new javax.swing.JTextField();
        filterLabel = new javax.swing.JLabel();
        photoDisplayLabel = new javax.swing.JLabel();
        browseButton = new javax.swing.JButton();

        viewEmployeeLabel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        viewEmployeeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        viewEmployeeLabel.setText("View Employee Details");

        viewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Id", "Age", "Gender", "Start Date", "Level", "Team Info", "Position", "Phone No.", "Email", "Photo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewTable);
        if (viewTable.getColumnModel().getColumnCount() > 0) {
            viewTable.getColumnModel().getColumn(0).setHeaderValue("Name");
            viewTable.getColumnModel().getColumn(1).setHeaderValue("Id");
            viewTable.getColumnModel().getColumn(2).setHeaderValue("Age");
            viewTable.getColumnModel().getColumn(3).setHeaderValue("Gender");
            viewTable.getColumnModel().getColumn(4).setHeaderValue("Start Date");
            viewTable.getColumnModel().getColumn(5).setResizable(false);
            viewTable.getColumnModel().getColumn(5).setHeaderValue("Level");
            viewTable.getColumnModel().getColumn(6).setResizable(false);
            viewTable.getColumnModel().getColumn(6).setHeaderValue("Team Info");
            viewTable.getColumnModel().getColumn(7).setResizable(false);
            viewTable.getColumnModel().getColumn(7).setHeaderValue("Position");
            viewTable.getColumnModel().getColumn(8).setHeaderValue("Phone No.");
            viewTable.getColumnModel().getColumn(9).setResizable(false);
            viewTable.getColumnModel().getColumn(9).setHeaderValue("Email");
            viewTable.getColumnModel().getColumn(10).setResizable(false);
            viewTable.getColumnModel().getColumn(10).setHeaderValue("Photo");
        }

        phoneLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        phoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        phoneLabel.setText("Phone Number:");

        photoLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        photoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        photoLabel.setText("Photo:");

        emailLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        emailLabel.setText("Email Id:");

        nameLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLabel.setText("Name:");

        idLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        idLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idLabel.setText("Id:");

        ageLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        ageLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ageLabel.setText("Age:");

        genderLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        genderLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        genderLabel.setText("Gender:");

        dateLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dateLabel.setText("Start Date:");

        levelLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        levelLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        levelLabel.setText("Level:");

        teamInfoLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        teamInfoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        teamInfoLabel.setText("Team Information:");

        positionLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        positionLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        positionLabel.setText("Position Title:");

        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        idTextField.setEditable(false);
        idTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextFieldActionPerformed(evt);
            }
        });

        ageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTextFieldActionPerformed(evt);
            }
        });
        ageTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ageTextFieldKeyTyped(evt);
            }
        });

        genderTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderTextFieldActionPerformed(evt);
            }
        });

        dateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextFieldActionPerformed(evt);
            }
        });

        levelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelTextFieldActionPerformed(evt);
            }
        });

        teamInfoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamInfoTextFieldActionPerformed(evt);
            }
        });

        positionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positionTextFieldActionPerformed(evt);
            }
        });

        phoneTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTextFieldActionPerformed(evt);
            }
        });
        phoneTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phoneTextFieldKeyPressed(evt);
            }
        });

        photoTextField.setEditable(false);
        photoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoTextFieldActionPerformed(evt);
            }
        });

        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        filterTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterTextFieldKeyReleased(evt);
            }
        });

        filterLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        filterLabel.setText("Filter Employee Data:");

        browseButton.setText("Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewEmployeeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 1062, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(idLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(genderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(levelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(genderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(26, 26, 26)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(positionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(phoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(photoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(teamInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(teamInfoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(positionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(photoTextField)
                                            .addGap(18, 18, 18)
                                            .addComponent(browseButton))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(levelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(updateButton))))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(filterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(filterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(photoDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewEmployeeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterLabel)
                    .addComponent(filterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewButton)
                    .addComponent(deleteButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genderLabel))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateLabel)
                            .addComponent(photoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(levelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(levelLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(teamInfoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teamInfoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(positionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(positionLabel))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneLabel))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(photoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(browseButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton))
                    .addComponent(photoDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void idTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextFieldActionPerformed

    private void ageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTextFieldActionPerformed

    private void genderTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderTextFieldActionPerformed

    private void dateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTextFieldActionPerformed

    private void levelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_levelTextFieldActionPerformed

    private void teamInfoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamInfoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teamInfoTextFieldActionPerformed

    private void positionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_positionTextFieldActionPerformed

    private void phoneTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTextFieldActionPerformed

    private void photoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_photoTextFieldActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int rowToBeViewed = viewTable.getSelectedRow();
        if(rowToBeViewed < 0 ){
            JOptionPane.showMessageDialog(this, "Please select a row to be viewed");
            return;
        }
        DefaultTableModel table = (DefaultTableModel) viewTable.getModel();
        EmployeeDetails employee = (EmployeeDetails)table.getValueAt(rowToBeViewed, 4);
        
        nameTextField.setText(employee.getEmployeeName());
        idTextField.setText(employee.getEmployeeId());
        ageTextField.setText(String.valueOf(employee.getEmployeeAge()));
        genderTextField.setText(employee.getEmployeeGender());
        dateTextField.setText(employee.getEmployeeStartDate());
        levelTextField.setText(employee.getEmployeeLevel());
        teamInfoTextField.setText(employee.getTeamInfo());
        positionTextField.setText(employee.getPositionTitle());
        photoTextField.setText(employee.getPhotoUrl());
        phoneTextField.setText(employee.getPhoneNumber());
        emailTextField.setText(employee.getEmailAddress());
        
        File file = new File(photoTextField.getText());
        BufferedImage bi;
        System.out.println("file is"+ file);
        try {
            bi = ImageIO.read(file);
            photoDisplayLabel.setIcon(new ImageIcon(bi));
        } catch(IOException e) {
            e.printStackTrace();
        }
       
    }//GEN-LAST:event_viewButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int rowToBeDeleted = viewTable.getSelectedRow();
        if(rowToBeDeleted < 0 ){
            JOptionPane.showMessageDialog(this, "Please select a row to be deleted");
            return;
        }
        DefaultTableModel table = (DefaultTableModel) viewTable.getModel();
        EmployeeDetails emp = (EmployeeDetails)table.getValueAt(rowToBeDeleted, 4);
        allEmp.deleteEmployee(emp);
        JOptionPane.showMessageDialog(this, "Selected Employee details has been deleted");
        displayEmployeeDetailsTable();
        
        nameTextField.setText("");
        idTextField.setText("");
        ageTextField.setText("");
        genderTextField.setText("");
        dateTextField.setText("");
        levelTextField.setText("");
        teamInfoTextField.setText("");
        positionTextField.setText("");
        photoTextField.setText("");
        phoneTextField.setText("");
        emailTextField.setText("");
        photoDisplayLabel.setIcon(null);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        int rowToBeUpdated = viewTable.getSelectedRow();
        if(rowToBeUpdated < 0 ){
            return;
        }
        DefaultTableModel table = (DefaultTableModel) viewTable.getModel();
        EmployeeDetails empToDelete = (EmployeeDetails)table.getValueAt(rowToBeUpdated, 4);
        allEmp.deleteEmployee(empToDelete);
        EmployeeDetails employee = allEmp.addEmployeeDetails();
        employee.setEmployeeName(nameTextField.getText());
        employee.setEmployeeId(idTextField.getText());
        employee.setEmployeeAge(Integer.parseInt(ageTextField.getText()));
        employee.setEmployeeGender(genderTextField.getText());
        employee.setEmployeeStartDate(dateTextField.getText());
        employee.setEmployeeLevel(levelTextField.getText());
        employee.setTeamInfo(teamInfoTextField.getText());
        employee.setPositionTitle(positionTextField.getText());
        employee.setPhotoUrl(photoTextField.getText());
        employee.setPhoneNumber(phoneTextField.getText());
        employee.setEmailAddress(emailTextField.getText());
        
        JOptionPane.showMessageDialog(this, "Employee Details are updated");
        displayEmployeeDetailsTable();
        
        nameTextField.setText("");
        idTextField.setText("");
        ageTextField.setText("");
        genderTextField.setText("");
        dateTextField.setText("");
        levelTextField.setText("");
        teamInfoTextField.setText("");
        positionTextField.setText("");
        photoTextField.setText("");
        phoneTextField.setText("");
        emailTextField.setText("");
        photoDisplayLabel.setIcon(null);
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void filterTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterTextFieldKeyReleased
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel) viewTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(table); 
        String filterValue = filterTextField.getText();
        viewTable.setRowSorter(sorter);
        System.out.print(filterValue);
        if (filterValue.length() == 0){
            sorter.setRowFilter(null);
        }
        else {
            System.out.print("In else");
            sorter.setRowFilter(RowFilter.regexFilter(filterValue));
        }
    }//GEN-LAST:event_filterTextFieldKeyReleased

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileBrowser = new JFileChooser();
        fileBrowser.setDialogTitle("Choose Your File");
        fileBrowser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnval = fileBrowser.showOpenDialog(this);
        if (returnval == JFileChooser.APPROVE_OPTION)
        {
            File file = fileBrowser.getSelectedFile();
            BufferedImage bi;
            photoTextField.setText(file.toString());
            try {
                // display the image in a Jlabel
                bi = ImageIO.read(file);
                photoDisplayLabel.setIcon(new ImageIcon(bi));
            } catch(IOException e) {
               e.printStackTrace();
            }
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void ageTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageTextFieldKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_ageTextFieldKeyTyped

    private void phoneTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneTextFieldKeyPressed
        // TODO add your handling code here:
        String phoneNumber = phoneTextField.getText();
        int phoneLength = phoneNumber.length();
        char c = evt.getKeyChar();
        // check for number 0 - 9
        if(evt.getKeyChar()>= '0' && evt.getKeyChar()<= '9'){
            if(phoneLength<10){
                // length should not be more than 10
                phoneTextField.setEditable(true);
            } else {
                // not editable if length is more than 10
                phoneTextField.setEditable(false);
            }
        } else {
            // Allow Backspace and Delete for edit
            if (evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || 
                    evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                phoneTextField.setEditable(true);
            } else {
                phoneTextField.setEditable(false);
            }
        }
    }//GEN-LAST:event_phoneTextFieldKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JButton browseButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel filterLabel;
    private javax.swing.JTextField filterTextField;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JTextField genderTextField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField levelTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JLabel photoDisplayLabel;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JTextField photoTextField;
    private javax.swing.JLabel positionLabel;
    private javax.swing.JTextField positionTextField;
    private javax.swing.JLabel teamInfoLabel;
    private javax.swing.JTextField teamInfoTextField;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton viewButton;
    private javax.swing.JLabel viewEmployeeLabel;
    private javax.swing.JTable viewTable;
    // End of variables declaration//GEN-END:variables

    private void displayEmployeeDetailsTable() {
        DefaultTableModel table = (DefaultTableModel) viewTable.getModel();
        table.setRowCount(0);
        for (EmployeeDetails emp: allEmp.getAllEmployees()){
            Object[] row = new Object[11];
            row[0]= emp.getEmployeeName();
            row[1]=emp.getEmployeeId();
            row[2]=Integer.toString(emp.getEmployeeAge());
            row[3]= emp.getEmployeeGender();
            row[4]=emp;
            row[5]=emp.getEmployeeLevel();
            row[6]=emp.getTeamInfo();
            row[7]=emp.getPositionTitle();
            row[8]=emp.getPhoneNumber();
            row[9]=emp.getEmailAddress();
            row[10]=emp.getPhotoUrl();
            table.addRow(row);
        }
    }
}
