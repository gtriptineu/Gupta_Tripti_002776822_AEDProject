/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import model.DoctorDirectory;
import model.Encounter;
import model.HospitalDirectory;
import model.Patient;
import model.PatientDirectory;
import model.PersonDirectory;
import model.VitalSigns;

/**
 *
 * @author Lenovo
 */
public class AddVitalSigns extends javax.swing.JPanel {

    /**
     * Creates new form AddVitalSigns
     */
    PatientDirectory patientDirectory;
    private JSplitPane SplitPane;
    PersonDirectory personDirectory;
    private int PatientID;
    HospitalDirectory hospitalDirectory;
    DoctorDirectory doctorDirectory;
    public AddVitalSigns(JSplitPane SplitPane,PatientDirectory patientDirectory,PersonDirectory personDirectory,
            int PatientID, HospitalDirectory hospitalDirectory, DoctorDirectory doctorDirectory) {
        initComponents();
        this.patientDirectory = patientDirectory;
        this.SplitPane = SplitPane;
        this.PatientID = PatientID;
        this.personDirectory = personDirectory;
        this.hospitalDirectory = hospitalDirectory;
        this.doctorDirectory = doctorDirectory;
        
        for(Patient p: patientDirectory.getPatientDirectory())
         {
             if(p.getPatientId()==PatientID)
             {
             nameInput.setText(p.getName());
             patientIdInput.setText(String.valueOf(p.getPatientId()));
             }
         }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addVitalHeading = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        patientIdLabel = new javax.swing.JLabel();
        pulseLabel = new javax.swing.JLabel();
        bloodPressureLabel = new javax.swing.JLabel();
        tempLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        patientIdInput = new javax.swing.JTextField();
        pulseInput = new javax.swing.JTextField();
        bloodPressureInput = new javax.swing.JTextField();
        tempInput = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        addVitalHeading.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addVitalHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addVitalHeading.setText("Add Vital Signs");

        nameLabel.setText("Name:");

        patientIdLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        patientIdLabel.setText("Patient ID:");

        pulseLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pulseLabel.setText("Pulse:");

        bloodPressureLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bloodPressureLabel.setText("Blood Pressure:");

        tempLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        tempLabel.setText("Temperature:");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addVitalHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(nameLabel)
                        .addComponent(patientIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                        .addComponent(pulseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(bloodPressureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tempLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(nameInput)
                        .addComponent(patientIdInput)
                        .addComponent(pulseInput)
                        .addComponent(bloodPressureInput)
                        .addComponent(tempInput, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)))
                .addContainerGap(266, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addVitalHeading)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientIdLabel)
                    .addComponent(patientIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pulseLabel)
                    .addComponent(pulseInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodPressureLabel)
                    .addComponent(bloodPressureInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempLabel)
                    .addComponent(tempInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(backButton))
                .addContainerGap(128, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private static boolean isInteger(String s) {
    try { 
        Integer.parseInt(s); 
    } catch(NumberFormatException e) { 
        return false; 
    } catch(NullPointerException e) {
        return false;
    }
    // only got here if we didn't return false
    return true;
}
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        if(pulseInput.getText().equals("") || !isInteger(pulseInput.getText()))
        {
            JOptionPane.showMessageDialog(this, "Pulse Feild is invalid.");
        }
        else if(tempInput.getText().equals("") || !isInteger(tempInput.getText()))
        {
            JOptionPane.showMessageDialog(this, "Temperature Feild is invalid.");
        }
        else if(bloodPressureInput.getText().equals("") || !isInteger(bloodPressureInput.getText()))
        {
            JOptionPane.showMessageDialog(this, "Blood pressure Feild is invalid.");
        }
        else
        {
        Encounter pe;
        for(Patient p: patientDirectory.getPatientDirectory())
         {
             if(p.getPatientId()==PatientID)
             {
             p.setName(nameInput.getText());
             p.setPatientId(Integer.parseInt(patientIdInput.getText()));
             pe = p.getEncounterHistory().addNewEncounter();
             pe.setBloodPressure(Integer.parseInt(bloodPressureInput.getText()));
             pe.setTemperature(Integer.parseInt(tempInput.getText()));
             pe.setPulse(Integer.parseInt(pulseInput.getText()));
             DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
             LocalDateTime now = LocalDateTime.now();
             String UpdateTime = dtf.format(now);
             pe.setUpdateTime(UpdateTime);
             
             JOptionPane.showMessageDialog(this, "New Encounter added.");
             
            bloodPressureInput.setText("");
            tempInput.setText("");
            pulseInput.setText(""); 
            }
        }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        ViewPatient viewPatientDetails = new ViewPatient(SplitPane,patientDirectory,personDirectory, hospitalDirectory,doctorDirectory);
        SplitPane.setRightComponent(viewPatientDetails);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addVitalHeading;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField bloodPressureInput;
    private javax.swing.JLabel bloodPressureLabel;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField patientIdInput;
    private javax.swing.JLabel patientIdLabel;
    private javax.swing.JTextField pulseInput;
    private javax.swing.JLabel pulseLabel;
    private javax.swing.JTextField tempInput;
    private javax.swing.JLabel tempLabel;
    // End of variables declaration//GEN-END:variables
}
